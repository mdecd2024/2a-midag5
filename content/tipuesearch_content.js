var tipuesearch = {"pages": [{'title': 'About', 'text': '網頁:  https://mdecd2024.github.io/2a-midag5/content/index.html \n 網誌:  https://mdecd2024.github.io/2a-midag5/blog/index.html \n 簡報:  https://mdecd2024.github.io/2a-midag5/reveal/index.html \n 倉儲:\xa0 https://github.com/mdecd2024/2a-midag5 \n 40823143  個人倉儲   個人網站   個人網誌 \n 40923116\xa0 個人倉儲 \xa0 個人網站   個人網誌 \n 40923118\xa0 個人倉儲 \xa0 個人網站   個人網誌 \n 40923131  個人倉儲   個人網站   個人網誌 \n 40923154\xa0 個人倉儲 \xa0 個人網站 \n 40923244\xa0 個人倉儲 \xa0 個人網站 \xa0 個人網誌 \n 41023246  個人倉儲   個人網站   個人網誌 \n \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'latex', 'text': '論文翻譯 \n 41023246  1-10 \n 40823143  10-20 \n 40923116  21-30 \n 40923118  31-40 \n 40923131  41-50 \n 40923124 51-60 \n 40923244  61-70 \n 40923154  71-80 \n \n', 'tags': '', 'url': 'latex.html'}, {'title': 'W4', 'text': '', 'tags': '', 'url': 'W4.html'}, {'title': '第一週影片', 'text': '', 'tags': '', 'url': '第一週影片.html'}, {'title': '建立個人課程倉儲與網站', 'text': '\n 逐字稿 \n 摘要 \n 登入個人github後 在taems中 利用老師給的連結 https://github.com/mdecycu/cmsimde_site 建立名稱為cd2024的個人倉儲 並建議在說明欄內填入"協同產品設計實習的個人課程網頁" 最後在設定內進入 Pages 設定main 並儲存 \n', 'tags': '', 'url': '建立個人課程倉儲與網站.html'}, {'title': '如何從 Replit Account 設定 Connect 連結到 Github', 'text': '\n 逐字稿 \n 摘要 \n 登入個人github 並和replit連動登入 進入reolit中的Profile 並取的github的連結 他會在github中安裝程式 授權之後等它安裝好就完成了 可在github中的設定內進入Application 若看到replit哲帶扁兩邊是信任的 \n \n', 'tags': '', 'url': '如何從 Replit Account 設定 Connect 連結到 Github.html'}, {'title': '如何設定 Github 帳號的雙重認證', 'text': '\n 逐字稿 \n 摘要 \n 登入github 在設定內進入 Password and authentication(密碼和認證) 在底下綁定個人手機/手錶(在帳號建立後有45天的時間可以綁定)\xa0 \n \n', 'tags': '', 'url': '如何設定 Github 帳號的雙重認證.html'}, {'title': '說明如何將倉儲 import 至 Replit 改版後推回 github', 'text': '\n 逐字稿 \n 摘要 \n 介紹如何使用 Replit 線上協作平台進行靜態網站的開發與部署。重點包括從GitHub匯入專案、安裝模組、編輯設定檔、產生靜態檔案、提交改動至遠端倉庫等步驟,最終實現自動部署更新後的網站內容。 \n \n', 'tags': '', 'url': '說明如何將倉儲 import 至 Replit 改版後推回 github.html'}, {'title': 'blog_setup', 'text': '\n 逐字稿 \n 摘要 \n 如何在Replit平台上設定靜態部落格網站,包含網頁檔案的儲存位置、使用Pelican工具產生靜態檔案、編輯Markdown來源檔案的格式要求,以及透過執行指令來即時預覽和部署更新後的網站內容。 \n', 'tags': '', 'url': 'blog_setup.html'}, {'title': 'odoo_plm簡介', 'text': '\n 逐字稿 \n 摘要 \n 介紹產品生命週期管理系統（PLM）中的操作流程，包括建立新產品、分配任務給組員、組織會議、追蹤進度等功能，旨在協助有效管理產品開發過程。 \n \n', 'tags': '', 'url': 'odoo_plm簡介.html'}, {'title': '第二週影片', 'text': '', 'tags': '', 'url': '第二週影片.html'}, {'title': 'cd2024_2a_w2_5 如何利用近端可攜環境與外部 IPv4 開啟動態網站', 'text': '\n 逐字稿 \n 摘要 \n 建立分組倉儲, 並利用 Codespaces 維護倉儲 ,並在Codespaces中輸入 chmod u+x init_replit 指令安裝模組, 若要執行動態可輸入python3 main.py, 若要執行靜態可輸入-python -m http.server, 但Github Codespaces 每月有使用限制 故建議在需利用 pelican 轉檔或啟動編輯 config/content.htm 與轉靜態網頁內容時, 才啟用 Codespaces \n \n', 'tags': '', 'url': 'cd2024_2a_w2_5 如何利用近端可攜環境與外部 IPv4 開啟動態網站.html'}, {'title': '第三週影片', 'text': '', 'tags': '', 'url': '第三週影片.html'}, {'title': '如何將學員倉儲設為分組倉儲的子模組 6', 'text': '\n 逐字稿 \n 摘要 \n \n', 'tags': '', 'url': '如何將學員倉儲設為分組倉儲的子模組 6.html'}, {'title': 'cd2024_2a_w3_利用分組協同建立 LaTeX 報告', 'text': '\n 逐字稿 \n 摘要 \n 介紹如何利用LaTeX協同建立分組報告,包含配置LaTeX環境、撰寫LaTeX原始碼、插入圖片與引用、子模組管理多人協作內容、產生PDF報告等步驟。透過LaTeX的版本控制和模組化設計,實現高效的團隊寫作和集中管理。 \n \n', 'tags': '', 'url': 'cd2024_2a_w3_利用分組協同建立 LaTeX 報告.html'}, {'title': 'cd2024_2b_w3_使用 gitpod 與 localhost 維護個人倉儲', 'text': '\n 逐字稿 \n 摘要 \n 介紹如何使用Gitpod和本地主機(localhost)來維護個人代碼倉庫。涵蓋了在Gitpod中安裝所需模組、啟動動態和靜態網站服務、使用SSH密鑰或個人訪問令牌授權連接遠端倉庫等操作步驟,為遠端協作開發提供便利。 \n', 'tags': '', 'url': 'cd2024_2b_w3_使用 gitpod 與 localhost 維護個人倉儲.html'}, {'title': 'wcm2024_1a_w3_2_將組員的個人倉儲納為分組倉儲的子模組', 'text': '\n 逐字稿 \n 摘要 \n 介紹如何將組員的個人倉庫納入分組倉庫作為子模組,包括在GitHub上查找相關文件、下載解壓縮、複製文件內容到分組倉庫中、提交推送到遠程倉庫等步驟,方便進行集中管理和維護。 \n', 'tags': '', 'url': 'wcm2024_1a_w3_2_將組員的個人倉儲納為分組倉儲的子模組.html'}, {'title': 'wcm2024_1a_w3_3_如何在 replit 自設 .ssh 維護分組倉儲', 'text': '\n 逐字稿 \n 摘要 \n \n', 'tags': '', 'url': 'wcm2024_1a_w3_3_如何在 replit 自設 .ssh 維護分組倉儲.html'}, {'title': '第四週影片', 'text': '', 'tags': '', 'url': '第四週影片.html'}, {'title': 'wcm2024_5j_w4_2_如何在 Replit 執行靜態網站檢視', 'text': '\n 逐字稿 \n 摘要 \n 介紹如何在Replit中執行靜態網站預覽,包括開啟隱藏的設定檔、使用python flask模組啟動動態和靜態網站服務、上傳檔案到程式碼倉庫、利用相對路徑引用靜態檔案等步驟。重點闡述了在Replit平台上建立和維護靜態網站的操作方式。 \n', 'tags': '', 'url': 'wcm2024_5j_w4_2_如何在 Replit 執行靜態網站檢視.html'}, {'title': 'wcm2024_5j_w4_3 如何在倉儲中建立 main2 與 static python 檔案', 'text': '\n 逐字稿 \n 摘要 \n 主要介紹如何在GitHub倉庫中建立main2與static兩個Python檔案。涉及將這兩個檔案推送到遠端倉庫並在本地端執行靜態網站檢視的步驟。 \n', 'tags': '', 'url': 'wcm2024_5j_w4_3 如何在倉儲中建立 main2 與 static python 檔案.html'}, {'title': '期中報告', 'text': '', 'tags': '', 'url': '期中報告.html'}, {'title': '40923116', 'text': '\n', 'tags': '', 'url': '40923116.html'}, {'title': '40923118', 'text': '\n', 'tags': '', 'url': '40923118.html'}, {'title': '40923131', 'text': '\n', 'tags': '', 'url': '40923131.html'}, {'title': '40923154', 'text': '\n', 'tags': '', 'url': '40923154.html'}, {'title': '41023246', 'text': '\n', 'tags': '', 'url': '41023246.html'}, {'title': '40923244', 'text': '\n \n \n', 'tags': '', 'url': '40923244.html'}, {'title': '整合分組網誌', 'text': '老師在這裡也有講解 \xa0( 影片 ) \n 1.複製老師的程式碼 \n 2.開啟近端中的分組檔案(pelicanconf.py)，將複製的程式碼貼上，最後填入組員學號以整合網誌 \n \n ##須注意\xa0 網誌名稱不能一樣 不然整合是會產生衝突## \n \n \n ##需更改內容如下 更改完網誌標題即可整合## \n \n 3.開啟 gen_blog 檔並另存為 .bat 檔，並輸入 gen_blog_Integrate.bat 最後在 acp 即可整合完成(以 40923118 為例) \n \n \n \n', 'tags': '', 'url': '整合分組網誌.html'}, {'title': '鋼球平衡台', 'text': '4023118  參考檔案 \xa0 操作影片 \n', 'tags': '', 'url': '鋼球平衡台.html'}, {'title': '操控足球機器人', 'text': '4023118\xa0\xa0 操作影片 \n', 'tags': '', 'url': '操控足球機器人.html'}, {'title': '球賽競技的機器人設計', 'text': '4023118  零件檔案   場景及程式檔案 \xa0 操作影片 \n', 'tags': '', 'url': '球賽競技的機器人設計.html'}]};
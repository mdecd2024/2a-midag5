<h1>About</h1>
<p>網頁: <a href="https://mdecd2024.github.io/2a-midag5/content/index.html">https://mdecd2024.github.io/2a-midag5/content/index.html</a></p>
<p>網誌: <a href="https://mdecd2024.github.io/2a-midag5/blog/index.html">https://mdecd2024.github.io/2a-midag5/blog/index.html</a></p>
<p>簡報: <a href="https://mdecd2024.github.io/2a-midag5/reveal/index.html">https://mdecd2024.github.io/2a-midag5/reveal/index.html</a></p>
<p>倉儲: <a href="https://github.com/mdecd2024/2a-midag5">https://github.com/mdecd2024/2a-midag5</a></p>
<p></p>
<p>40923116 <a href="https://github.com/40923116/cd2024">個人倉儲</a> <a href="https://40923116.github.io/cd2024/content/index.html">個人網站</a></p>
<p>40923118 <a href="https://github.com/40923118/cd2024">個人倉儲</a><span> </span><a href="https://40923118.github.io/cd2024/content/index.html">個人網站</a></p>
<p>40923154 <a href="https://github.com/40923154/cd2024">個人倉儲</a> <a href="https://40923154.github.io/cd2024/content/index.html">個人網站</a></p>
<<<<<<< HEAD
<p>40923244 <a href="https://github.com/40923244/cd2024">個人倉儲</a> <a href="https://40923244.github.io/cd2024/">個人網站</a> <a href="https://40923244.github.io/cd2024/blog">個人網誌</a></p>
<p></p>
=======
<p>41023246 <a href="https://github.com/41023246nfu/cd2024">個人倉儲</a> <a href="https://e0d348ac-6cf7-4b21-9b76-8139afc94451-00-1v0tcrr123myf.sisko.replit.dev/get_page/About">個人網站</a></p>
<p>本 cmsimde 網際內容管理系統的對應 Template 倉儲:</p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecycu/cmsimde_site">https://github.com/mdecycu/cmsimde_site</a></p>
<p style="padding-left: 30px;">此 Template 將 cmsimde 作為子目錄而非子模組, 使用者可以依照需求自行修改</p>
<p style="padding-left: 30px;">倉儲對應網站: <a href="https://mde.tw/cmsimde_site">https://mde.tw/cmsimde_site</a></p>
>>>>>>> 336eafd0e5c12fa71632e5435a7a4d36758c0391
<h1>Onshape</h1>
<p>40923116</p>
<p>40923154</p>
<p>40923131</p>
<h1>latex</h1>
<p>翻譯分配</p>
<p>40823143 10-20</p>
<p>40923116 <a href="https://drive.google.com/file/d/1LsdxgrLyk4KoZ03YpcpOYPQ44dsAvDUt/view?usp=drive_link">21-30</a></p>
<p>40923118 31-40</p>
<p>40923131 41-50</p>
<p>40923124 51-60</p>
<<<<<<< HEAD
<p>40923244 <a href="https://drive.google.com/file/d/12Aew31v2zAwpgGur_MMzsw7Tf1smxP_R/view?usp=drive_link" title="61-70">61-70</a></p>
<p>40923154 71-80</p>
=======
<p>40923244 <a href="file:///D:/%E5%9A%B4%E5%AE%B6%E6%98%8E/40923244%E7%BF%BB%E8%AD%AF%E7%89%88.pdf">61-70</a></p>
<p>40923154 <a href="https://drive.google.com/file/d/1lIpNuxpie8SF12aAXxsnn-cR0IVh9idR/view?usp=drive_link">71-80</a></p>
<p></p>
>>>>>>> 336eafd0e5c12fa71632e5435a7a4d36758c0391
<p>40923154</p>
<p>41023246</p>
<h1>翻譯作業</h1>
<h2>第一週影片</h2>
<h3>建立個人課程倉儲與網站</h3>
<<<<<<< HEAD
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/TMcOK2mUjHo?si=p7C21eEpZSWX9Awa" title="YouTube video player" width="560"></iframe></p>
<h4><a href="/downloads/cd2024_2b_1_建立個人課程倉儲與網站.txt">逐字稿</a></h4>
<p><strong>摘要</strong></p>
=======
<h4><a href="https://youtu.be/TMcOK2mUjHo">影片</a>   <a href="/downloads/cd2024_2b_1_建立個人課程倉儲與網站.txt">逐字稿</a></h4>
<p>------------------</p>
<p><span>摘要</span></p>
>>>>>>> 336eafd0e5c12fa71632e5435a7a4d36758c0391
<p>建立個人倉儲 與網站<br/>登入個人github後 在taems中 利用老師給的連結 https://github.com/mdecycu/cmsimde_site 建立名稱為cd2024的個人倉儲 並建議在說明欄內填入"協同產品設計實習的個人課程網頁"<br/>最後在設定內進入 Pages 設定main 並儲存</p>
<h3>如何從 Replit Account 設定 Connect 連結到 Github</h3>
<<<<<<< HEAD
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/N798hn7KOqQ?si=7rDqxIX7vkPh9rhP" title="YouTube video player" width="560"></iframe></p>
<p><a href="/downloads/cd2024_2b_2_如何從 Replit Account 設定 Connect 連結到 Github.txt">逐字稿</a></p>
<p><strong>摘要</strong></p>
<p>登入個人github 並和replit連動登入<br/>進入reolit中的Profile 並取的github的連結 他會在github中安裝程式 授權之後等它安裝好就完成了<br/>可在github中的設定內進入Application 若看到replit哲帶扁兩邊是信任的</p>
<p></p>
<h3>如何設定 Github 帳號的雙重認證</h3>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/S0N-gOjP_UQ?si=Brq4qTVzeoT48rIH" title="YouTube video player" width="560"></iframe></p>
<p><a href="/downloads/cd2024_2b_3_如何設定 Github 帳號的雙重認證.txt">逐字稿</a></p>
<p><strong>摘要</strong></p>
<p>登入github 在設定內進入 Password and authentication(密碼和認證) 在底下綁定個人手機/手錶(在帳號建立後有45天的時間可以綁定) </p>
<p></p>
<h3>說明如何將倉儲 import 至 Replit 改版後推回 github</h3>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/q_itF1X2ApQ?si=GiNFdsYq2ML1Kgyt" title="YouTube video player" width="560"></iframe><a href="/downloads/cd2024_2b_4_說明如何將倉儲 import 至 Replit 改版後推回 github.txt"></a></p>
<p><a href="/downloads/cd2024_2b_4_說明如何將倉儲 import 至 Replit 改版後推回 github.txt">逐字稿</a></p>
<p><strong>摘要</strong></p>
<p></p>
<h3>blog_setup</h3>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/OmPwUvljqx8?si=XATgPUaoB_nplblY" title="YouTube video player" width="560"></iframe></p>
<p><a href="/downloads/cd2024_2a_1_blog_setup.txt">逐字稿</a></p>
<p><strong>摘要</strong></p>
<p></p>
<h3>odoo_plm簡介</h3>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/OreiGj14CF0?si=4NuGSg0D8GFhAj9M" title="YouTube video player" width="560"></iframe></p>
<p><a href="/downloads/cd2024_2a_2_odoo_plm簡介.txt">逐字稿</a></p>
<p><strong>摘要</strong></p>
<p></p>
<h2>第二週影片</h2>
<h3>cd2024_2a_w2_5 如何利用近端可攜環境與外部 IPv4 開啟動態網站</h3>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/wiDaRDNA2jM?si=BCsXvt8ZiU2SFuiO" title="YouTube video player" width="560"></iframe></p>
<p>逐字稿</p>
<p><strong>摘要</strong></p>
<p><span>建立分組倉儲, 並利用 Codespaces 維護倉儲 ,並在Codespaces中輸入 chmod u+x init_replit 指令安裝模組, 若要執行動態可輸入python3 main.py, 若要執行靜態可輸入-python -m http.server, 但Github Codespaces 每月有使用限制 故建議在需利用 pelican 轉檔或啟動編輯 config/content.htm 與轉靜態網頁內容時, 才啟用 Codespaces</span></p>
<p></p>
<h2>第三週影片</h2>
<h3 class="style-scope ytd-watch-metadata"><yt-formatted-string class="style-scope ytd-watch-metadata" force-default-style="">如何將學員倉儲設為分組倉儲的子模組 6</yt-formatted-string></h3>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/iDgLC8I7je0?si=mZ4ehCq6ALFIz1nH" title="YouTube video player" width="560"></iframe></p>
<p><strong><a href="https://drive.google.com/file/d/1OvBLrXRWlHjHq1uAndiRw9K9Mr3grfKy/view?usp=drive_link">逐字稿</a></strong></p>
<p><strong>摘要</strong></p>
<p><strong></strong></p>
=======
<p><a href="https://youtu.be/N798hn7KOqQ">影片</a>   <a href="https://drive.google.com/file/d/1QyGaYFGOYKhGDKrEwA4BSXPQQZbddiQa/view?usp=drive_link">逐字稿</a></p>
<p>-----------------</p>
<p><span>摘要</span></p>
<p>登入個人github 並和replit連動登入<br/>進入reolit中的Profile 並取的github的連結 他會在github中安裝程式 授權之後等它安裝好就完成了<br/>可在github中的設定內進入Application 若看到replit哲帶扁兩邊是信任的</p>
<p></p>
<h3>如何設定 Github 帳號的雙重認證</h3>
<p><a href="https://youtu.be/S0N-gOjP_UQ">影片</a>   <a href="/downloads/cd2024_2b_3_如何設定 Github 帳號的雙重認證.txt">逐字稿</a></p>
<p>----------------</p>
<p><span>摘要</span></p>
<p>登入github 在設定內進入 Password and authentication(密碼和認證) 在底下綁定個人手機/手錶(在帳號建立後有45天的時間可以綁定) </p>
<p></p>
<h3>說明如何將倉儲 import 至 Replit 改版後推回 github</h3>
<p><a href="https://youtu.be/q_itF1X2ApQ">影片</a>  <a href="/downloads/cd2024_2b_4_說明如何將倉儲 import 至 Replit 改版後推回 github.txt">逐字稿</a></p>
<p>-------------</p>
<p>摘要</p>
<p></p>
<h3>blog_setup</h3>
<p><a href="https://youtu.be/OmPwUvljqx8">影片</a>  <a href="/downloads/cd2024_2a_1_blog_setup.txt">逐字稿</a></p>
<p>----------------</p>
<p>摘要</p>
<p></p>
<h3>odoo_plm簡介</h3>
<p>------------------</p>
<p><a href="https://youtu.be/OreiGj14CF0">影片</a>  <a href="/downloads/cd2024_2a_2_odoo_plm簡介.txt">逐字稿</a></p>
<p>摘要</p>
<p></p>
<h2>第二週影片</h2>
<h3>cd2024_2a_w2_3 如何建立各組的 Team midag1 並利用 Codespaces 維護內容</h3>
<h4><a href="https://youtu.be/Ovak86EyUnE">影片</a>   <a href="/downloads/cd2024_2a_w2_3_如何建立各組的%20Team midag1 並利用 Codespaces 維護內容.txt">逐字稿</a></h4>
<p>------------------</p>
<p><span>摘要</span></p>
<p></p>
<h3>cd2024_2a_w2_4_利用  Replit 管理 Github Classroom 分組倉儲</h3>
<h4><a href="https://youtu.be/SFNbRaEfdlM">影片</a>  <a href="/downloads/cd2024_2a_w2_4_利用  Replit 管理 Github Classroom 分組倉儲.txt">逐字稿</a></h4>
<p>------------------</p>
<p><span>摘要</span></p>
<p></p>
<h3>cd2024_2a_w2_5 如何利用近端可攜環境與外部 IPv4 開啟動態網站 影片字幕</h3>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/wiDaRDNA2jM?si=BCsXvt8ZiU2SFuiO" title="YouTube video player" width="560"></iframe></p>
<h3>cd2024_2b_7_w2 利用 codespaces 維護分組網站</h3>
<h4><a href="https://youtu.be/cMrkGBo3rU4">影片 </a> <a href="/downloads/cd2024_2b_7_w2 利用 codespaces 維護分組網站.txt">逐字稿</a></h4>
<p>------------------</p>
<p><span>摘要</span></p>
<p><span></span></p>
<h2>第三週影片</h2>
<h3>cd2024_2a_w3_如何將學員倉儲設為分組倉儲的子模組</h3>
<h4><a href="https://youtu.be/X03mtYzZaME">影片</a>  <a href="/downloads/cd2024_2a_w3_如何將學員倉儲設為分組倉儲的子模組.txt">逐字稿</a></h4>
<p>------------------</p>
<p><span>摘要</span></p>
<p><span></span></p>
<h3>cd2024_2a_w3_利用分組協同建立 LaTeX 報告</h3>
<h4><a href="https://youtu.be/JLAhRTh2clE">影片</a> <a href="/downloads/cd2024_2a_w3_利用分組協同建立 LaTeX 報告.txt"> 逐字稿</a></h4>
<p>------------------</p>
<p><span>摘要</span></p>
<p><span></span></p>
<h3>cd2024_2b_w3_使用 gitpod 與 localhost 維護個人倉儲</h3>
<h4><a href="https://youtu.be/_COTZQNsOTs">影片</a>  <a href="/downloads/cd2024_2b_w3_使用 gitpod 與 localhost 維護個人倉儲.txt">逐字稿</a></h4>
<p>------------------</p>
<p><span>摘要</span></p>
<p><span></span></p>
<h3>wcm2024_1a_w3_2_將組員的個人倉儲納為分組倉儲的子模組</h3>
<h4><a href="https://youtu.be/rwPqjfY59hQ">影片</a>  <a href="/downloads/wcm2024_1a_w3_2_將組員的個人倉儲納為分組倉儲的子模組%20.txt">逐字稿</a></h4>
<p>------------------</p>
<p><span>摘要</span></p>
<p><span></span></p>
<h3>wcm2024_1a_w3_3_如何在 replit 自設 .ssh 維護分組倉儲</h3>
<h4><a href="https://youtu.be/rgWIza6jMwQ">影片</a>  <a href="/downloads/wcm2024_1a_w3_3_如何在 replit 自設 .ssh 維護分組倉儲.txt">逐字稿</a></h4>
<p>------------------</p>
<p><span>摘要</span></p>
<p><span></span></p>
>>>>>>> 336eafd0e5c12fa71632e5435a7a4d36758c0391
<h2>第四週影片</h2>
<h3>wcm2024_5j_w4_2_如何在 Replit 執行靜態網站檢視</h3>
<h4><a href="https://youtu.be/_GKjSRgolzw">影片</a>   <a href="/downloads/wcm2024_5j_w4_2_如何在 Replit 執行靜態網站檢視.txt">逐字稿</a></h4>
<p>------------------</p>
<p><span>摘要</span></p>
<p><span></span></p>
<h3>wcm2024_5j_w4_3 如何在倉儲中建立 main2 與 static python 檔案</h3>
<h4><a href="https://youtu.be/llhgVaJl_gQ">影片</a>  <a href="/downloads/wcm2024_5j_w4_3 如何在倉儲中建立 main2 與 static python 檔案.txt">逐字稿</a></h4>
<p>------------------</p>
<p><span>摘要</span></p>
<p><span></span></p>
<h1>期中報告</h1>
<p>40923116 <a href="https://youtu.be/HumKHWamrDs?si=hfee7KpejwpYgHSU">https://youtu.be/HumKHWamrDs?si=hfee7KpejwpYgHSU</a></p>
<<<<<<< HEAD
=======
&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
<p>40923154 <a href="https://youtu.be/pzs8_sTKCiM">https://youtu.be/pzs8_sTKCiM</a></p><h1>Brython</h1>
=======
<p>41023246 <a href="https://youtu.be/wdHyCjGTwBg?si=SAR1tPTGSqhfJ7nT">https://youtu.be/wdHyCjGTwBg?si=SAR1tPTGSqhfJ7nT</a></p>
<h1>Brython</h1>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; 76db31bd434161a31837d4b217370d49fd7b3e04
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍)</h4>
<h4>Variables (<a href="https://github.com/python/cpython/blob/3.11/Lib/keyword.py">Python Keywords</a>)</h4>
<h4>Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解)</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a> (整數 int(), 浮點數 float())</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a> (字串)</h4>
<h4>print (Python 內建函式, <a href="https://docs.python.org/3/library/functions.html#print">print()</a> 函式)</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<!-- editor2 結束 --><hr/>
>>>>>>> 336eafd0e5c12fa71632e5435a7a4d36758c0391
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>